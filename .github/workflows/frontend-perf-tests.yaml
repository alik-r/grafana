name: Scheduled Performance Tests

on:
  schedule:
    - cron: "0 * * * *" # Run hourly
  workflow_dispatch: # Allow manual triggering
  pull_request: # todo remove before merging
  push:
    branches:
      - jh/scheduled-perf-tests

jobs:
  performance-tests:
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-x64-large

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - id: get-secrets
        uses: grafana/shared-workflows/actions/get-vault-secrets@62722333225a1fae03ae27a63d638f9bc2176edb #get-vault-secrets-v1.2.0
        with:
          repo_secrets: |
            PROMETHEUS_URL=frontend_perf_tests:prometheus_push_url
            PROMETHEUS_USER=frontend_perf_tests:prometheus_user
            PROMETHEUS_TOKEN=frontend_perf_tests:prometheus_token
            FSPERFBASELINE_USERNAME=frontend_perf_tests:fsperfbaseline_username
            FSPERFBASELINE_PASSWORD=frontend_perf_tests:fsperfbaseline_password
            FSPERF_USERNAME=frontend_perf_tests:fsperf_username
            FSPERF_PASSWORD=frontend_perf_tests:fsperf_password

      - name: Authenticate Docker
        uses: grafana/shared-workflows/actions/login-to-gar@main
        id: login-to-gar
        with:
          registry: 'us-docker.pkg.dev'
          environment: 'dev'

      - name: Setup Node.js
        uses: ./.github/actions/setup-node

      - name: Cache Node.js modules
        uses: actions/cache@v4
        id: nm-cache
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Yarn install
        run: yarn install --immutable
        if: ${{ !steps.nm-cache.outputs.cache-hit }}
        env:
          PUPPETEER_SKIP_DOWNLOAD: true
          CYPRESS_INSTALL_BINARY: 0

      - name: Install Playwright browsers
        run: yarn playwright install chromium --with-deps

      - name: Run Playwright tests
        env:
          GRAFANA_URL: https://fsperfbaseline.grafana-dev.net
          GRAFANA_ADMIN_USER: ${{ env.FSPERFBASELINE_USERNAME }}
          GRAFANA_ADMIN_PASSWORD: ${{ env.FSPERFBASELINE_PASSWORD }}
        run: yarn e2e:playwright --grep @performance # probably written to wrong place

      - run: tree -a playwright
        if: always()
      
      - run: tree -aL 2
        if: always()
      
      # - name: Bench report
      #   run: |
      #     docker run \
      #       --rm \
      #       --volume="/tmp/playwright-results.json:/home/bench/tests/playwright-results.json" \
      #       -e PROMETHEUS_URL=$PROMETHEUS_URL \
      #       -e PROMETHEUS_USER=$PROMETHEUS_USER \
      #       -e PROMETHEUS_PASSWORD=$PROMETHEUS_TOKEN \
      #       us-docker.pkg.dev/grafanalabs-global/docker-grafana-bench-prod/grafana-bench:v0.6.0 report \
      #         --grafana-url "http://fsperfbaseline.grafana-dev.net" \
      #         --test-suite-name "FrontendPerfTests" \
      #         --report-input playwright \
      #         --report-output log \
      #         --prometheus-metrics \
      #         --run-metrics-file "/tmp/asset-metrics.txt" \
      #         --log-level DEBUG \
      #         /home/bench/tests/playwright-results.json
